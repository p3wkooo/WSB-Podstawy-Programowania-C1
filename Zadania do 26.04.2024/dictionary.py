# -*- coding: utf-8 -*-
"""dictionary.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Y8tan6BbUvdwhimxFMRqIJMjXalIyCo5
"""

#1.Write a Python program to add a key to a dictionary.
def add_key(dictionary, key, value):
    dictionary[key] = value

my_dict = {'a': 1, 'b': 2, 'c': 3}
new_key = 'd'
new_value = 4
add_key(my_dict, new_key, new_value)
print("Zaktualizowany słownik", my_dict)

#2.Write a Python program to check whether a given key already exists in a dictionary.
def check_key(dictionary, key):
    if key in dictionary:
        return True
    else:
        return False

my_dict = {'a': 1, 'b': 2, 'c': 3}
key = 'c'
key_exists = check_key(my_dict, key)
if key_exists:
  print(f"Klucz '{key}' istnieje w słowniku.")
else:
    print(f"Klucz '{key}' nie istnieje w słowniku.")

#3.Write a Python script to generate and print a dictionary that contains a number (between 1 and n) in the form (x, x*x).
def generate(n):
    squared_dict = {x: x*x for x in range(1, n+1)}
    return squared_dict

n = 5
squared_dict = generate(n)
print("Wygenerowany słownik", squared_dict)

#4.Write a Python script to merge two Python dictionaries.
def dictionaries(dict1, dict2):
    merged_dict = dict1.copy()
    merged_dict.update(dict2)
    return merged_dict

dict1 = {'a': 1, 'b': 2}
dict2 = {'c': 3, 'd': 4}
merged_dict = dictionaries(dict1, dict2)
print("Scalony słownik:", merged_dict)

#5.Write a Python program to sum all the items in a dictionary.
def suma(dictionary):
    suma = 0
    for value in dictionary.values():
        suma += value
    return suma

my_dict = {'a': 1, 'b': 4, 'c': 3}
sum_result = suma(my_dict)
print("Suma wszystkich elementów w słowniku:", sum_result)

#6.Write a Python program to multiply all the items in a dictionary.
def multiply(dictionary):
    result = 1
    for value in dictionary.values():
        result *= value
    return result
my_dict = {'a': 2, 'b': 3, 'c': 4}
multiply_result = multiply(my_dict)
print("mnozenie  wszystkich elementów w słowniku:", multiply_result)

#7.Write a Python program to remove a key from a dictionary.
def remove(dictionary, key):
    if key in dictionary:
        del dictionary[key]
        print(f"Klucz '{key}' został usunięty ze słownika.")
    else:
        print(f"Klucz '{key}' nie istnieje w słowniku.")

my_dict = {'a': 1, 'b': 2, 'c': 3}
key_to_remove = 'b'
remove(my_dict, key_to_remove)
print("Zaktualizowany słownik:", my_dict)

#8.Write a Python program to sort a given dictionary by key
def sortkey(dictionary):
    sorted_dict = dict(sorted(dictionary.items()))
    return sorted_dict
my_dict = {'b': 2, 'a': 1, 'c': 3,'d': 5}
sorted_dict = sortkey(my_dict)
print("Posortowany słownik według klucza", sorted_dict)

#9.Write a Python program to get the maximum and minimum values of a dictionary.
def max_min(dictionary):
    if len(dictionary) == 0:
        return None, None
    max_value = max(dictionary.values())
    min_value = min(dictionary.values())
    return max_value, min_value
my_dict = {'a': 10, 'b': 5, 'c': 15, 'd': 3}
max_val, min_val = max_min(my_dict)
print("Maksymalna wartość:", max_val)
print("Minimalna wartość:", min_val)

#10.Write a Python program to iterate over dictionaries using for loops.
my_dict = {'jabłko': 2, 'banan': 3, 'pomarańcza': 1}
print("Iteracja po kluczach:")
for key in my_dict:
    print(key)

print("\nIteracja po wartościach:")
for value in my_dict.values():
    print(value)

print("\nIteracja po elementach:")
for key, value in my_dict.items():
    print(key, "->", value)

#11.Write a Python program to remove duplicates from the dictionary.
my_dict = {'a': 1, 'b': 2, 'c': 1, 'd': 3, 'e': 2}
unique_dict = {}
for key, value in my_dict.items():
    if key not in unique_dict:

        unique_dict[key] = value
print("Słownik bez duplikatów:")
print(unique_dict)

#12.Write a Python program to check if a dictionary is empty or not.
my_dict = {3}
if not my_dict:
    print("Słownik jest pusty")
else:
    print("Słownik nie jest pusty")

#13.Write a Python program to print all distinct values in a dictionary.
data = [{"V":"S001"}, {"V": "S002"}, {"VI": "S001"}, {"VI": "S005"}, {"VII":"S005"}, {"V":"S009"},{"VIII":"S007"}]
unique_values = set()

for dictionary in data:
    for value in dictionary.values():
        unique_values.add(value)
print("Wszystkie różne wartości w słowniku:")
for value in unique_values:
    print(value)

#14.Write a Python program to print a dictionary in table format.
my_dict ={'Imię i Nazwisko': 'Janusz Kowalski', 'Wiek': 69, 'Kraj': 'Polska'}
print(tabulate(table_data))

#15.Write a Python program to print a dictionary line by line.
students = {'Pawel': {'klasa': '3', 'id': 2}, 'Antek': {'klasa': '2', 'id': 1}}
for a in students:
    print(a)
    for b in students[a]:
        print(b, ':', students[a][b])

#16.Write a Python program to remove spaces from dictionary keys.
student_list = {'S  001': ['Matematyka', 'WF'], 'S    002': ['Matematyka', 'Polski']}
print("Oryginalny słownik: ", student_list)
student_dict = {x.translate({32: None}): y for x, y in student_list.items()}
print("Nowy słownik: ", student_dict)

#17.Write a Python program to verify that all values in a dictionary are the same.
def are_all_values_same(input_dict):
    first_value = next(iter(input_dict.values()), None)
    if first_value is None or len(input_dict) == 1:
        return True
    return all(value == first_value for value in input_dict.values())
dict1 = {'a': 5, 'b': 5, 'c': 5}
dict2 = {'x': 10, 'y': 10, 'z': 20}

print("Czy wszystkie wartości w słowniku słownik1 są takie same?", are_all_values_same(dict1))
print("Czy wszystkie wartości w słowniku słownik2 są takie same?", are_all_values_same(dict2))

#18.Write a Python program to sort a list alphabetically in a dictionary.
def sort_list(input_dict):
    sorted_dict = {}
    for key, value in input_dict.items():
        sorted_dict[key] = sorted(value)
    return sorted_dict
input_dict = {
   'owoce': ['banan', 'jabłko', 'pomarańcza'],
    'zwierzęta': ['kot', 'pies', 'słoń']
}

sorted_dict = sort_list(input_dict)
print(sorted_dict)

#19.Write a Python program to filter a dictionary based on values.
marks = {'Cierra Vega': 175, 'Alden Cantrell': 180, 'Kierra Gentry': 165, 'Pierre Cox': 190}
print("Oryginalny słownik:")
print(marks)
print("Oceny większe niż 170:")
result = {key: value for (key, value) in marks.items() if value >= 170}
print(result)

#20.Write a Python program to split a given dictionary of lists into lists of dictionaries.
def list_of_dicts(marks):
    keys = marks.keys()
    vals = zip(*[marks[k] for k in keys])
    result = [dict(zip(keys, v)) for v in vals]
    return result
marks = {'Przedmiot1': [88, 89, 62, 95], 'Przedmiot2': [77, 78, 84, 80]}
print("Oryginalny słownik list:")
print(marks)
print("\nPodziel powyższy słownik list na listę słowników:")
print(list_of_dicts(marks))